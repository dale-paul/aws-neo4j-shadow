// users with inline policies attached
match(n:USER {console_access:'true'})-[:HAS_INLINE_POLICY]->(p) 
WITH n.name as name, n.account as account, p.name as policy 
ORDER BY name return name, account, policy;

// User key and password info
match(n:USER {console_access:'true'}) 
with n order by n.account, n.name
return n.name, n.account, n.console_access, n.account_age_days,
n.last_login_days,n.last_password_change_days,
n.password_rotation_due_days,n.api_access,n.accesskey_last_rotated_days;

// users who haven't logged in in over 180 days
match(n:USER {console_access:'true'})
where coalesce(n.last_login_days,999) > 180
with n.account as account, n.name as name
order by account,name
with account, collect(name) as names
return account, names;

// access keys to non-console users that have not been used in 180 days
match(n:USER {api_access:'true'}) 
where coalesce(n.accesskey_last_used_days,999) > 180
with n.account as account, n.name as name
order by account, name
with account, collect(name) as names
return account, names;

//Services used
match(n:SERVICE)-[r:ACCESSED_BY]-(u:USER)
where r.last_access_days < 90
with n.account as account, n.name as service order by account,service
return account, collect(distinct service) as services;

// Services by User access
MATCH(s:SERVICE)-[r:ACCESSED_BY]-(u:USER) 
WHERE r.last_access_days < 90
WITH s.account as Account, s.name as Service, u.name as User
ORDER BY Account, Service, User
return Account, Service, collect(User) as Users;

// User by Services access
MATCH(s:SERVICE)-[r:ACCESSED_BY]-(u:USER) 
WHERE r.last_access_days < 90
with s.account as Account, u.name as User, s.name as Service order by Account,User,Service
return Account, User, collect(Service) as Services;

// Admin and PowerUsers
match(p:POLICY {account:"<account#>"}) WHERE p.name in ["AdministratorAccess","PowerUserAccess"]
optional match(g:GROUP)-[:HAS_POLICY]->(p2) WHERE (p2=p)
optional match(r:ROLE)-[:HAS_POLICY]->(p3) WHERE (p3=p)
optional match(u:USER {account:"<account#>",console_access:'true'})
return g,p,r,u

// aws access with no CMS EUA
match(u:USER) 
where size(u.name) = 4 and u.email = '' and (u.console_access = 'true' or u.api_access = 'true')
return u.account, u.name, u.fullname, u.email, u.phone, u.console_access, u.api_access

// EUA
match(u:USER) 
where size(u.name) = 4 and (u.console_access = 'true' or u.api_access = 'true') //and u.email = ''
with u.name as EUA, u.fullname as Name, u.email as Email, u.phone as Phone, collect(u.account) as Accounts order by EUA
return EUA, Name, Email, Phone, Accounts

// User Access Advisor
MATCH(s:SERVICE)-[r:ACCESSED_BY]-(u:USER) 
where (u.console_access = 'true' or u.api_access = 'true')
//WHERE r.last_access_days < 90
with s.account as Account, u.name as User, u.fullname as FullName, s.name as Service, r.last_access_days as RecentAccess order by User,Account,RecentAccess,Service
return Account, User,FullName, RecentAccess, collect(Service) as Services;